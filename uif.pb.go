// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: uif.proto

package uif_shared

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FontStyle int32

const (
	FontStyle_FONT_STYLE_NORMAL  FontStyle = 0
	FontStyle_FONT_STYLE_OBLIQUE FontStyle = 1
	FontStyle_FONT_STYLE_ITALIC  FontStyle = 2
)

// Enum value maps for FontStyle.
var (
	FontStyle_name = map[int32]string{
		0: "FONT_STYLE_NORMAL",
		1: "FONT_STYLE_OBLIQUE",
		2: "FONT_STYLE_ITALIC",
	}
	FontStyle_value = map[string]int32{
		"FONT_STYLE_NORMAL":  0,
		"FONT_STYLE_OBLIQUE": 1,
		"FONT_STYLE_ITALIC":  2,
	}
)

func (x FontStyle) Enum() *FontStyle {
	p := new(FontStyle)
	*p = x
	return p
}

func (x FontStyle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FontStyle) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[0].Descriptor()
}

func (FontStyle) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[0]
}

func (x FontStyle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FontStyle.Descriptor instead.
func (FontStyle) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{0}
}

type FontWeight int32

const (
	FontWeight_FONT_WEIGHT_UNDEFINED   FontWeight = 0
	FontWeight_FONT_WEIGHT_THIN        FontWeight = 100
	FontWeight_FONT_WEIGHT_EXTRA_LIGHT FontWeight = 200
	FontWeight_FONT_WEIGHT_LIGHT       FontWeight = 300
	FontWeight_FONT_WEIGHT_SEMI_LIGHT  FontWeight = 350
	FontWeight_FONT_WEIGHT_NORMAL      FontWeight = 400
	FontWeight_FONT_WEIGHT_MEDIUM      FontWeight = 500
	FontWeight_FONT_WEIGHT_SEMI_BOLD   FontWeight = 600
	FontWeight_FONT_WEIGHT_BOLD        FontWeight = 700
	FontWeight_FONT_WEIGHT_EXTRA_BOLD  FontWeight = 800
	FontWeight_FONT_WEIGHT_BLACK       FontWeight = 900
	FontWeight_FONT_WEIGHT_EXTRA_BLACK FontWeight = 950
)

// Enum value maps for FontWeight.
var (
	FontWeight_name = map[int32]string{
		0:   "FONT_WEIGHT_UNDEFINED",
		100: "FONT_WEIGHT_THIN",
		200: "FONT_WEIGHT_EXTRA_LIGHT",
		300: "FONT_WEIGHT_LIGHT",
		350: "FONT_WEIGHT_SEMI_LIGHT",
		400: "FONT_WEIGHT_NORMAL",
		500: "FONT_WEIGHT_MEDIUM",
		600: "FONT_WEIGHT_SEMI_BOLD",
		700: "FONT_WEIGHT_BOLD",
		800: "FONT_WEIGHT_EXTRA_BOLD",
		900: "FONT_WEIGHT_BLACK",
		950: "FONT_WEIGHT_EXTRA_BLACK",
	}
	FontWeight_value = map[string]int32{
		"FONT_WEIGHT_UNDEFINED":   0,
		"FONT_WEIGHT_THIN":        100,
		"FONT_WEIGHT_EXTRA_LIGHT": 200,
		"FONT_WEIGHT_LIGHT":       300,
		"FONT_WEIGHT_SEMI_LIGHT":  350,
		"FONT_WEIGHT_NORMAL":      400,
		"FONT_WEIGHT_MEDIUM":      500,
		"FONT_WEIGHT_SEMI_BOLD":   600,
		"FONT_WEIGHT_BOLD":        700,
		"FONT_WEIGHT_EXTRA_BOLD":  800,
		"FONT_WEIGHT_BLACK":       900,
		"FONT_WEIGHT_EXTRA_BLACK": 950,
	}
)

func (x FontWeight) Enum() *FontWeight {
	p := new(FontWeight)
	*p = x
	return p
}

func (x FontWeight) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FontWeight) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[1].Descriptor()
}

func (FontWeight) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[1]
}

func (x FontWeight) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FontWeight.Descriptor instead.
func (FontWeight) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{1}
}

type FontStretch int32

const (
	FontStretch_FONT_STRETCH_UNDEFINED       FontStretch = 0
	FontStretch_FONT_STRETCH_ULTRA_CONDENSED FontStretch = 1
	FontStretch_FONT_STRETCH_EXTRA_CONDENSED FontStretch = 2
	FontStretch_FONT_STRETCH_CONDENSED       FontStretch = 3
	FontStretch_FONT_STRETCH_SEMI_CONDENSED  FontStretch = 4
	FontStretch_FONT_STRETCH_NORMAL          FontStretch = 5
	FontStretch_FONT_STRETCH_SEMI_EXPANDED   FontStretch = 6
	FontStretch_FONT_STRETCH_EXPANDED        FontStretch = 7
	FontStretch_FONT_STRETCH_EXTRA_EXPANDED  FontStretch = 8
	FontStretch_FONT_STRETCH_ULTRA_EXPANDED  FontStretch = 9
)

// Enum value maps for FontStretch.
var (
	FontStretch_name = map[int32]string{
		0: "FONT_STRETCH_UNDEFINED",
		1: "FONT_STRETCH_ULTRA_CONDENSED",
		2: "FONT_STRETCH_EXTRA_CONDENSED",
		3: "FONT_STRETCH_CONDENSED",
		4: "FONT_STRETCH_SEMI_CONDENSED",
		5: "FONT_STRETCH_NORMAL",
		6: "FONT_STRETCH_SEMI_EXPANDED",
		7: "FONT_STRETCH_EXPANDED",
		8: "FONT_STRETCH_EXTRA_EXPANDED",
		9: "FONT_STRETCH_ULTRA_EXPANDED",
	}
	FontStretch_value = map[string]int32{
		"FONT_STRETCH_UNDEFINED":       0,
		"FONT_STRETCH_ULTRA_CONDENSED": 1,
		"FONT_STRETCH_EXTRA_CONDENSED": 2,
		"FONT_STRETCH_CONDENSED":       3,
		"FONT_STRETCH_SEMI_CONDENSED":  4,
		"FONT_STRETCH_NORMAL":          5,
		"FONT_STRETCH_SEMI_EXPANDED":   6,
		"FONT_STRETCH_EXPANDED":        7,
		"FONT_STRETCH_EXTRA_EXPANDED":  8,
		"FONT_STRETCH_ULTRA_EXPANDED":  9,
	}
)

func (x FontStretch) Enum() *FontStretch {
	p := new(FontStretch)
	*p = x
	return p
}

func (x FontStretch) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FontStretch) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[2].Descriptor()
}

func (FontStretch) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[2]
}

func (x FontStretch) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FontStretch.Descriptor instead.
func (FontStretch) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{2}
}

type TextAlign int32

const (
	TextAlign_TEXT_ALIGN_LEADING   TextAlign = 0
	TextAlign_TEXT_ALIGN_TRAILING  TextAlign = 1
	TextAlign_TEXT_ALIGN_CENTER    TextAlign = 2
	TextAlign_TEXT_ALIGN_JUSTIFIED TextAlign = 3
)

// Enum value maps for TextAlign.
var (
	TextAlign_name = map[int32]string{
		0: "TEXT_ALIGN_LEADING",
		1: "TEXT_ALIGN_TRAILING",
		2: "TEXT_ALIGN_CENTER",
		3: "TEXT_ALIGN_JUSTIFIED",
	}
	TextAlign_value = map[string]int32{
		"TEXT_ALIGN_LEADING":   0,
		"TEXT_ALIGN_TRAILING":  1,
		"TEXT_ALIGN_CENTER":    2,
		"TEXT_ALIGN_JUSTIFIED": 3,
	}
)

func (x TextAlign) Enum() *TextAlign {
	p := new(TextAlign)
	*p = x
	return p
}

func (x TextAlign) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TextAlign) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[3].Descriptor()
}

func (TextAlign) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[3]
}

func (x TextAlign) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TextAlign.Descriptor instead.
func (TextAlign) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{3}
}

type ParagraphAlign int32

const (
	ParagraphAlign_PARAGRAPH_ALIGN_NEAR   ParagraphAlign = 0
	ParagraphAlign_PARAGRAPH_ALIGN_FAR    ParagraphAlign = 1
	ParagraphAlign_PARAGRAPH_ALIGN_CENTER ParagraphAlign = 2
)

// Enum value maps for ParagraphAlign.
var (
	ParagraphAlign_name = map[int32]string{
		0: "PARAGRAPH_ALIGN_NEAR",
		1: "PARAGRAPH_ALIGN_FAR",
		2: "PARAGRAPH_ALIGN_CENTER",
	}
	ParagraphAlign_value = map[string]int32{
		"PARAGRAPH_ALIGN_NEAR":   0,
		"PARAGRAPH_ALIGN_FAR":    1,
		"PARAGRAPH_ALIGN_CENTER": 2,
	}
)

func (x ParagraphAlign) Enum() *ParagraphAlign {
	p := new(ParagraphAlign)
	*p = x
	return p
}

func (x ParagraphAlign) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParagraphAlign) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[4].Descriptor()
}

func (ParagraphAlign) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[4]
}

func (x ParagraphAlign) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParagraphAlign.Descriptor instead.
func (ParagraphAlign) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{4}
}

type PCBeginKind int32

const (
	PCBeginKind_PC_BEGINKIND_FILLED PCBeginKind = 0
	PCBeginKind_PC_BEGINKIND_HOLLOW PCBeginKind = 1
)

// Enum value maps for PCBeginKind.
var (
	PCBeginKind_name = map[int32]string{
		0: "PC_BEGINKIND_FILLED",
		1: "PC_BEGINKIND_HOLLOW",
	}
	PCBeginKind_value = map[string]int32{
		"PC_BEGINKIND_FILLED": 0,
		"PC_BEGINKIND_HOLLOW": 1,
	}
)

func (x PCBeginKind) Enum() *PCBeginKind {
	p := new(PCBeginKind)
	*p = x
	return p
}

func (x PCBeginKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PCBeginKind) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[5].Descriptor()
}

func (PCBeginKind) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[5]
}

func (x PCBeginKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PCBeginKind.Descriptor instead.
func (PCBeginKind) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{5}
}

type PCEndKind int32

const (
	PCEndKind_PC_ENDKIND_OPEN   PCEndKind = 0
	PCEndKind_PC_ENDKIND_CLOSED PCEndKind = 1
)

// Enum value maps for PCEndKind.
var (
	PCEndKind_name = map[int32]string{
		0: "PC_ENDKIND_OPEN",
		1: "PC_ENDKIND_CLOSED",
	}
	PCEndKind_value = map[string]int32{
		"PC_ENDKIND_OPEN":   0,
		"PC_ENDKIND_CLOSED": 1,
	}
)

func (x PCEndKind) Enum() *PCEndKind {
	p := new(PCEndKind)
	*p = x
	return p
}

func (x PCEndKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PCEndKind) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[6].Descriptor()
}

func (PCEndKind) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[6]
}

func (x PCEndKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PCEndKind.Descriptor instead.
func (PCEndKind) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{6}
}

type MouseButton int32

const (
	MouseButton_MOUSE_BUTTON_NONE   MouseButton = 0
	MouseButton_MOUSE_BUTTON_LEFT   MouseButton = 1
	MouseButton_MOUSE_BUTTON_MIDDLE MouseButton = 2
	MouseButton_MOUSE_BUTTON_RIGHT  MouseButton = 3
	MouseButton_MOUSE_BUTTON_X1     MouseButton = 4
	MouseButton_MOUSE_BUTTON_X2     MouseButton = 5
)

// Enum value maps for MouseButton.
var (
	MouseButton_name = map[int32]string{
		0: "MOUSE_BUTTON_NONE",
		1: "MOUSE_BUTTON_LEFT",
		2: "MOUSE_BUTTON_MIDDLE",
		3: "MOUSE_BUTTON_RIGHT",
		4: "MOUSE_BUTTON_X1",
		5: "MOUSE_BUTTON_X2",
	}
	MouseButton_value = map[string]int32{
		"MOUSE_BUTTON_NONE":   0,
		"MOUSE_BUTTON_LEFT":   1,
		"MOUSE_BUTTON_MIDDLE": 2,
		"MOUSE_BUTTON_RIGHT":  3,
		"MOUSE_BUTTON_X1":     4,
		"MOUSE_BUTTON_X2":     5,
	}
)

func (x MouseButton) Enum() *MouseButton {
	p := new(MouseButton)
	*p = x
	return p
}

func (x MouseButton) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MouseButton) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[7].Descriptor()
}

func (MouseButton) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[7]
}

func (x MouseButton) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MouseButton.Descriptor instead.
func (MouseButton) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{7}
}

type MouseState int32

const (
	MouseState_MOUSE_STATE_NONE MouseState = 0
	MouseState_MOUSE_STATE_UP   MouseState = 1
	MouseState_MOUSE_STATE_DOWN MouseState = 2
)

// Enum value maps for MouseState.
var (
	MouseState_name = map[int32]string{
		0: "MOUSE_STATE_NONE",
		1: "MOUSE_STATE_UP",
		2: "MOUSE_STATE_DOWN",
	}
	MouseState_value = map[string]int32{
		"MOUSE_STATE_NONE": 0,
		"MOUSE_STATE_UP":   1,
		"MOUSE_STATE_DOWN": 2,
	}
)

func (x MouseState) Enum() *MouseState {
	p := new(MouseState)
	*p = x
	return p
}

func (x MouseState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MouseState) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[8].Descriptor()
}

func (MouseState) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[8]
}

func (x MouseState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MouseState.Descriptor instead.
func (MouseState) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{8}
}

type KeyState int32

const (
	KeyState_UNSET    KeyState = 0
	KeyState_KEY_DOWN KeyState = 1
	KeyState_KEY_UP   KeyState = 2
)

// Enum value maps for KeyState.
var (
	KeyState_name = map[int32]string{
		0: "UNSET",
		1: "KEY_DOWN",
		2: "KEY_UP",
	}
	KeyState_value = map[string]int32{
		"UNSET":    0,
		"KEY_DOWN": 1,
		"KEY_UP":   2,
	}
)

func (x KeyState) Enum() *KeyState {
	p := new(KeyState)
	*p = x
	return p
}

func (x KeyState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyState) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[9].Descriptor()
}

func (KeyState) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[9]
}

func (x KeyState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyState.Descriptor instead.
func (KeyState) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{9}
}

type EditCommand_EditKind int32

const (
	// Append a new child.
	EditCommand_APPEND_CHILD EditCommand_EditKind = 0
	// Replace an existing node.
	EditCommand_REPLACE_NODE EditCommand_EditKind = 1
	// Recursively delete all objects with the specified client id.
	EditCommand_CLEANUP_CLIENT EditCommand_EditKind = 2
	// Delete a single object with a given object id.
	EditCommand_DELETE_OBJECT EditCommand_EditKind = 3
)

// Enum value maps for EditCommand_EditKind.
var (
	EditCommand_EditKind_name = map[int32]string{
		0: "APPEND_CHILD",
		1: "REPLACE_NODE",
		2: "CLEANUP_CLIENT",
		3: "DELETE_OBJECT",
	}
	EditCommand_EditKind_value = map[string]int32{
		"APPEND_CHILD":   0,
		"REPLACE_NODE":   1,
		"CLEANUP_CLIENT": 2,
		"DELETE_OBJECT":  3,
	}
)

func (x EditCommand_EditKind) Enum() *EditCommand_EditKind {
	p := new(EditCommand_EditKind)
	*p = x
	return p
}

func (x EditCommand_EditKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditCommand_EditKind) Descriptor() protoreflect.EnumDescriptor {
	return file_uif_proto_enumTypes[10].Descriptor()
}

func (EditCommand_EditKind) Type() protoreflect.EnumType {
	return &file_uif_proto_enumTypes[10]
}

func (x EditCommand_EditKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditCommand_EditKind.Descriptor instead.
func (EditCommand_EditKind) EnumDescriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{24, 0}
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{0}
}

func (x *Point) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Point) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Rectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y      float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Width  float32 `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`
	Height float32 `protobuf:"fixed32,4,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Rectangle) Reset() {
	*x = Rectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rectangle) ProtoMessage() {}

func (x *Rectangle) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rectangle.ProtoReflect.Descriptor instead.
func (*Rectangle) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{1}
}

func (x *Rectangle) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Rectangle) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Rectangle) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Rectangle) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type SolidBrush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color uint32 `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *SolidBrush) Reset() {
	*x = SolidBrush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SolidBrush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SolidBrush) ProtoMessage() {}

func (x *SolidBrush) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SolidBrush.ProtoReflect.Descriptor instead.
func (*SolidBrush) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{2}
}

func (x *SolidBrush) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type GradientStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color    uint32  `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
	Position float32 `protobuf:"fixed32,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *GradientStop) Reset() {
	*x = GradientStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GradientStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GradientStop) ProtoMessage() {}

func (x *GradientStop) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GradientStop.ProtoReflect.Descriptor instead.
func (*GradientStop) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{3}
}

func (x *GradientStop) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *GradientStop) GetPosition() float32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type LinearGradientBrush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stops []*GradientStop `protobuf:"bytes,1,rep,name=stops,proto3" json:"stops,omitempty"`
	Start *Point          `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	End   *Point          `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *LinearGradientBrush) Reset() {
	*x = LinearGradientBrush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinearGradientBrush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinearGradientBrush) ProtoMessage() {}

func (x *LinearGradientBrush) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinearGradientBrush.ProtoReflect.Descriptor instead.
func (*LinearGradientBrush) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{4}
}

func (x *LinearGradientBrush) GetStops() []*GradientStop {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *LinearGradientBrush) GetStart() *Point {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *LinearGradientBrush) GetEnd() *Point {
	if x != nil {
		return x.End
	}
	return nil
}

type Brush struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*Brush_Solid
	//	*Brush_Linear
	Kind isBrush_Kind `protobuf_oneof:"kind"`
}

func (x *Brush) Reset() {
	*x = Brush{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Brush) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Brush) ProtoMessage() {}

func (x *Brush) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Brush.ProtoReflect.Descriptor instead.
func (*Brush) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{5}
}

func (m *Brush) GetKind() isBrush_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Brush) GetSolid() *SolidBrush {
	if x, ok := x.GetKind().(*Brush_Solid); ok {
		return x.Solid
	}
	return nil
}

func (x *Brush) GetLinear() *LinearGradientBrush {
	if x, ok := x.GetKind().(*Brush_Linear); ok {
		return x.Linear
	}
	return nil
}

type isBrush_Kind interface {
	isBrush_Kind()
}

type Brush_Solid struct {
	Solid *SolidBrush `protobuf:"bytes,1,opt,name=solid,proto3,oneof"`
}

type Brush_Linear struct {
	Linear *LinearGradientBrush `protobuf:"bytes,2,opt,name=linear,proto3,oneof"`
}

func (*Brush_Solid) isBrush_Kind() {}

func (*Brush_Linear) isBrush_Kind() {}

type RectangleNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rect           *Rectangle `protobuf:"bytes,1,opt,name=rect,proto3" json:"rect,omitempty"`
	Stroke         *Brush     `protobuf:"bytes,2,opt,name=stroke,proto3" json:"stroke,omitempty"`
	Filled         bool       `protobuf:"varint,3,opt,name=filled,proto3" json:"filled,omitempty"`
	StrokeWidth    float32    `protobuf:"fixed32,6,opt,name=stroke_width,json=strokeWidth,proto3" json:"stroke_width,omitempty"`
	RoundedRadiusX float32    `protobuf:"fixed32,4,opt,name=rounded_radius_x,json=roundedRadiusX,proto3" json:"rounded_radius_x,omitempty"`
	RoundedRadiusY float32    `protobuf:"fixed32,5,opt,name=rounded_radius_y,json=roundedRadiusY,proto3" json:"rounded_radius_y,omitempty"`
}

func (x *RectangleNode) Reset() {
	*x = RectangleNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RectangleNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RectangleNode) ProtoMessage() {}

func (x *RectangleNode) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RectangleNode.ProtoReflect.Descriptor instead.
func (*RectangleNode) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{6}
}

func (x *RectangleNode) GetRect() *Rectangle {
	if x != nil {
		return x.Rect
	}
	return nil
}

func (x *RectangleNode) GetStroke() *Brush {
	if x != nil {
		return x.Stroke
	}
	return nil
}

func (x *RectangleNode) GetFilled() bool {
	if x != nil {
		return x.Filled
	}
	return false
}

func (x *RectangleNode) GetStrokeWidth() float32 {
	if x != nil {
		return x.StrokeWidth
	}
	return 0
}

func (x *RectangleNode) GetRoundedRadiusX() float32 {
	if x != nil {
		return x.RoundedRadiusX
	}
	return 0
}

func (x *RectangleNode) GetRoundedRadiusY() float32 {
	if x != nil {
		return x.RoundedRadiusY
	}
	return 0
}

type TextEditSpan struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Length int32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	// Types that are assignable to Edit:
	//	*TextEditSpan_FontName
	//	*TextEditSpan_FontWeight
	//	*TextEditSpan_FontStyle
	//	*TextEditSpan_FontStretch
	//	*TextEditSpan_FontSize
	//	*TextEditSpan_Brush
	//	*TextEditSpan_Underline
	Edit isTextEditSpan_Edit `protobuf_oneof:"edit"`
}

func (x *TextEditSpan) Reset() {
	*x = TextEditSpan{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextEditSpan) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextEditSpan) ProtoMessage() {}

func (x *TextEditSpan) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextEditSpan.ProtoReflect.Descriptor instead.
func (*TextEditSpan) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{7}
}

func (x *TextEditSpan) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TextEditSpan) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (m *TextEditSpan) GetEdit() isTextEditSpan_Edit {
	if m != nil {
		return m.Edit
	}
	return nil
}

func (x *TextEditSpan) GetFontName() string {
	if x, ok := x.GetEdit().(*TextEditSpan_FontName); ok {
		return x.FontName
	}
	return ""
}

func (x *TextEditSpan) GetFontWeight() FontWeight {
	if x, ok := x.GetEdit().(*TextEditSpan_FontWeight); ok {
		return x.FontWeight
	}
	return FontWeight_FONT_WEIGHT_UNDEFINED
}

func (x *TextEditSpan) GetFontStyle() FontStyle {
	if x, ok := x.GetEdit().(*TextEditSpan_FontStyle); ok {
		return x.FontStyle
	}
	return FontStyle_FONT_STYLE_NORMAL
}

func (x *TextEditSpan) GetFontStretch() FontStretch {
	if x, ok := x.GetEdit().(*TextEditSpan_FontStretch); ok {
		return x.FontStretch
	}
	return FontStretch_FONT_STRETCH_UNDEFINED
}

func (x *TextEditSpan) GetFontSize() float32 {
	if x, ok := x.GetEdit().(*TextEditSpan_FontSize); ok {
		return x.FontSize
	}
	return 0
}

func (x *TextEditSpan) GetBrush() *Brush {
	if x, ok := x.GetEdit().(*TextEditSpan_Brush); ok {
		return x.Brush
	}
	return nil
}

func (x *TextEditSpan) GetUnderline() bool {
	if x, ok := x.GetEdit().(*TextEditSpan_Underline); ok {
		return x.Underline
	}
	return false
}

type isTextEditSpan_Edit interface {
	isTextEditSpan_Edit()
}

type TextEditSpan_FontName struct {
	FontName string `protobuf:"bytes,4,opt,name=font_name,json=fontName,proto3,oneof"`
}

type TextEditSpan_FontWeight struct {
	FontWeight FontWeight `protobuf:"varint,5,opt,name=font_weight,json=fontWeight,proto3,enum=uif.FontWeight,oneof"`
}

type TextEditSpan_FontStyle struct {
	FontStyle FontStyle `protobuf:"varint,6,opt,name=font_style,json=fontStyle,proto3,enum=uif.FontStyle,oneof"`
}

type TextEditSpan_FontStretch struct {
	FontStretch FontStretch `protobuf:"varint,7,opt,name=font_stretch,json=fontStretch,proto3,enum=uif.FontStretch,oneof"`
}

type TextEditSpan_FontSize struct {
	FontSize float32 `protobuf:"fixed32,8,opt,name=font_size,json=fontSize,proto3,oneof"`
}

type TextEditSpan_Brush struct {
	Brush *Brush `protobuf:"bytes,9,opt,name=brush,proto3,oneof"`
}

type TextEditSpan_Underline struct {
	Underline bool `protobuf:"varint,10,opt,name=underline,proto3,oneof"`
}

func (*TextEditSpan_FontName) isTextEditSpan_Edit() {}

func (*TextEditSpan_FontWeight) isTextEditSpan_Edit() {}

func (*TextEditSpan_FontStyle) isTextEditSpan_Edit() {}

func (*TextEditSpan_FontStretch) isTextEditSpan_Edit() {}

func (*TextEditSpan_FontSize) isTextEditSpan_Edit() {}

func (*TextEditSpan_Brush) isTextEditSpan_Edit() {}

func (*TextEditSpan_Underline) isTextEditSpan_Edit() {}

type TextNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bounds         *Rectangle      `protobuf:"bytes,1,opt,name=bounds,proto3" json:"bounds,omitempty"`
	Stroke         *Brush          `protobuf:"bytes,2,opt,name=stroke,proto3" json:"stroke,omitempty"`
	Text           string          `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	FontName       string          `protobuf:"bytes,4,opt,name=font_name,json=fontName,proto3" json:"font_name,omitempty"`
	FontWeight     FontWeight      `protobuf:"varint,5,opt,name=font_weight,json=fontWeight,proto3,enum=uif.FontWeight" json:"font_weight,omitempty"`
	FontStyle      FontStyle       `protobuf:"varint,6,opt,name=font_style,json=fontStyle,proto3,enum=uif.FontStyle" json:"font_style,omitempty"`
	FontStretch    FontStretch     `protobuf:"varint,7,opt,name=font_stretch,json=fontStretch,proto3,enum=uif.FontStretch" json:"font_stretch,omitempty"`
	FontSize       float32         `protobuf:"fixed32,8,opt,name=font_size,json=fontSize,proto3" json:"font_size,omitempty"`
	TextAlign      TextAlign       `protobuf:"varint,9,opt,name=text_align,json=textAlign,proto3,enum=uif.TextAlign" json:"text_align,omitempty"`
	ParagraphAlign ParagraphAlign  `protobuf:"varint,10,opt,name=paragraph_align,json=paragraphAlign,proto3,enum=uif.ParagraphAlign" json:"paragraph_align,omitempty"`
	EditSpans      []*TextEditSpan `protobuf:"bytes,11,rep,name=edit_spans,json=editSpans,proto3" json:"edit_spans,omitempty"`
}

func (x *TextNode) Reset() {
	*x = TextNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextNode) ProtoMessage() {}

func (x *TextNode) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextNode.ProtoReflect.Descriptor instead.
func (*TextNode) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{8}
}

func (x *TextNode) GetBounds() *Rectangle {
	if x != nil {
		return x.Bounds
	}
	return nil
}

func (x *TextNode) GetStroke() *Brush {
	if x != nil {
		return x.Stroke
	}
	return nil
}

func (x *TextNode) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextNode) GetFontName() string {
	if x != nil {
		return x.FontName
	}
	return ""
}

func (x *TextNode) GetFontWeight() FontWeight {
	if x != nil {
		return x.FontWeight
	}
	return FontWeight_FONT_WEIGHT_UNDEFINED
}

func (x *TextNode) GetFontStyle() FontStyle {
	if x != nil {
		return x.FontStyle
	}
	return FontStyle_FONT_STYLE_NORMAL
}

func (x *TextNode) GetFontStretch() FontStretch {
	if x != nil {
		return x.FontStretch
	}
	return FontStretch_FONT_STRETCH_UNDEFINED
}

func (x *TextNode) GetFontSize() float32 {
	if x != nil {
		return x.FontSize
	}
	return 0
}

func (x *TextNode) GetTextAlign() TextAlign {
	if x != nil {
		return x.TextAlign
	}
	return TextAlign_TEXT_ALIGN_LEADING
}

func (x *TextNode) GetParagraphAlign() ParagraphAlign {
	if x != nil {
		return x.ParagraphAlign
	}
	return ParagraphAlign_PARAGRAPH_ALIGN_NEAR
}

func (x *TextNode) GetEditSpans() []*TextEditSpan {
	if x != nil {
		return x.EditSpans
	}
	return nil
}

type PCBegin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind PCBeginKind `protobuf:"varint,1,opt,name=kind,proto3,enum=uif.PCBeginKind" json:"kind,omitempty"`
	Pt   *Point      `protobuf:"bytes,2,opt,name=pt,proto3" json:"pt,omitempty"`
}

func (x *PCBegin) Reset() {
	*x = PCBegin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCBegin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCBegin) ProtoMessage() {}

func (x *PCBegin) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCBegin.ProtoReflect.Descriptor instead.
func (*PCBegin) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{9}
}

func (x *PCBegin) GetKind() PCBeginKind {
	if x != nil {
		return x.Kind
	}
	return PCBeginKind_PC_BEGINKIND_FILLED
}

func (x *PCBegin) GetPt() *Point {
	if x != nil {
		return x.Pt
	}
	return nil
}

type PCEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind PCEndKind `protobuf:"varint,1,opt,name=kind,proto3,enum=uif.PCEndKind" json:"kind,omitempty"`
}

func (x *PCEnd) Reset() {
	*x = PCEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCEnd) ProtoMessage() {}

func (x *PCEnd) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCEnd.ProtoReflect.Descriptor instead.
func (*PCEnd) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{10}
}

func (x *PCEnd) GetKind() PCEndKind {
	if x != nil {
		return x.Kind
	}
	return PCEndKind_PC_ENDKIND_OPEN
}

type PCLineTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pt *Point `protobuf:"bytes,1,opt,name=pt,proto3" json:"pt,omitempty"`
}

func (x *PCLineTo) Reset() {
	*x = PCLineTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCLineTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCLineTo) ProtoMessage() {}

func (x *PCLineTo) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCLineTo.ProtoReflect.Descriptor instead.
func (*PCLineTo) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{11}
}

func (x *PCLineTo) GetPt() *Point {
	if x != nil {
		return x.Pt
	}
	return nil
}

type PCCubicCurve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Control1 *Point `protobuf:"bytes,1,opt,name=control1,proto3" json:"control1,omitempty"`
	Control2 *Point `protobuf:"bytes,2,opt,name=control2,proto3" json:"control2,omitempty"`
	End      *Point `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *PCCubicCurve) Reset() {
	*x = PCCubicCurve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCCubicCurve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCCubicCurve) ProtoMessage() {}

func (x *PCCubicCurve) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCCubicCurve.ProtoReflect.Descriptor instead.
func (*PCCubicCurve) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{12}
}

func (x *PCCubicCurve) GetControl1() *Point {
	if x != nil {
		return x.Control1
	}
	return nil
}

func (x *PCCubicCurve) GetControl2() *Point {
	if x != nil {
		return x.Control2
	}
	return nil
}

func (x *PCCubicCurve) GetEnd() *Point {
	if x != nil {
		return x.End
	}
	return nil
}

type PCQuadraticCurve struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Control1 *Point `protobuf:"bytes,1,opt,name=control1,proto3" json:"control1,omitempty"`
	End      *Point `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *PCQuadraticCurve) Reset() {
	*x = PCQuadraticCurve{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCQuadraticCurve) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCQuadraticCurve) ProtoMessage() {}

func (x *PCQuadraticCurve) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCQuadraticCurve.ProtoReflect.Descriptor instead.
func (*PCQuadraticCurve) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{13}
}

func (x *PCQuadraticCurve) GetControl1() *Point {
	if x != nil {
		return x.Control1
	}
	return nil
}

func (x *PCQuadraticCurve) GetEnd() *Point {
	if x != nil {
		return x.End
	}
	return nil
}

type PCArc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XRadius       float32 `protobuf:"fixed32,1,opt,name=x_radius,json=xRadius,proto3" json:"x_radius,omitempty"`
	YRadius       float32 `protobuf:"fixed32,2,opt,name=y_radius,json=yRadius,proto3" json:"y_radius,omitempty"`
	XAxisRotation float32 `protobuf:"fixed32,3,opt,name=x_axis_rotation,json=xAxisRotation,proto3" json:"x_axis_rotation,omitempty"`
	LargeArcFlag  bool    `protobuf:"varint,4,opt,name=large_arc_flag,json=largeArcFlag,proto3" json:"large_arc_flag,omitempty"`
	SweepFlag     bool    `protobuf:"varint,5,opt,name=sweep_flag,json=sweepFlag,proto3" json:"sweep_flag,omitempty"`
	End           *Point  `protobuf:"bytes,6,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *PCArc) Reset() {
	*x = PCArc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PCArc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PCArc) ProtoMessage() {}

func (x *PCArc) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PCArc.ProtoReflect.Descriptor instead.
func (*PCArc) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{14}
}

func (x *PCArc) GetXRadius() float32 {
	if x != nil {
		return x.XRadius
	}
	return 0
}

func (x *PCArc) GetYRadius() float32 {
	if x != nil {
		return x.YRadius
	}
	return 0
}

func (x *PCArc) GetXAxisRotation() float32 {
	if x != nil {
		return x.XAxisRotation
	}
	return 0
}

func (x *PCArc) GetLargeArcFlag() bool {
	if x != nil {
		return x.LargeArcFlag
	}
	return false
}

func (x *PCArc) GetSweepFlag() bool {
	if x != nil {
		return x.SweepFlag
	}
	return false
}

func (x *PCArc) GetEnd() *Point {
	if x != nil {
		return x.End
	}
	return nil
}

type PathCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Cmd:
	//	*PathCommand_Begin
	//	*PathCommand_End
	//	*PathCommand_LineTo
	//	*PathCommand_CubicTo
	//	*PathCommand_QuadTo
	//	*PathCommand_ArcTo
	Cmd isPathCommand_Cmd `protobuf_oneof:"cmd"`
}

func (x *PathCommand) Reset() {
	*x = PathCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathCommand) ProtoMessage() {}

func (x *PathCommand) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathCommand.ProtoReflect.Descriptor instead.
func (*PathCommand) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{15}
}

func (m *PathCommand) GetCmd() isPathCommand_Cmd {
	if m != nil {
		return m.Cmd
	}
	return nil
}

func (x *PathCommand) GetBegin() *PCBegin {
	if x, ok := x.GetCmd().(*PathCommand_Begin); ok {
		return x.Begin
	}
	return nil
}

func (x *PathCommand) GetEnd() *PCEnd {
	if x, ok := x.GetCmd().(*PathCommand_End); ok {
		return x.End
	}
	return nil
}

func (x *PathCommand) GetLineTo() *PCLineTo {
	if x, ok := x.GetCmd().(*PathCommand_LineTo); ok {
		return x.LineTo
	}
	return nil
}

func (x *PathCommand) GetCubicTo() *PCCubicCurve {
	if x, ok := x.GetCmd().(*PathCommand_CubicTo); ok {
		return x.CubicTo
	}
	return nil
}

func (x *PathCommand) GetQuadTo() *PCQuadraticCurve {
	if x, ok := x.GetCmd().(*PathCommand_QuadTo); ok {
		return x.QuadTo
	}
	return nil
}

func (x *PathCommand) GetArcTo() *PCArc {
	if x, ok := x.GetCmd().(*PathCommand_ArcTo); ok {
		return x.ArcTo
	}
	return nil
}

type isPathCommand_Cmd interface {
	isPathCommand_Cmd()
}

type PathCommand_Begin struct {
	Begin *PCBegin `protobuf:"bytes,10,opt,name=begin,proto3,oneof"`
}

type PathCommand_End struct {
	End *PCEnd `protobuf:"bytes,20,opt,name=end,proto3,oneof"`
}

type PathCommand_LineTo struct {
	LineTo *PCLineTo `protobuf:"bytes,11,opt,name=line_to,json=lineTo,proto3,oneof"`
}

type PathCommand_CubicTo struct {
	CubicTo *PCCubicCurve `protobuf:"bytes,12,opt,name=cubic_to,json=cubicTo,proto3,oneof"`
}

type PathCommand_QuadTo struct {
	QuadTo *PCQuadraticCurve `protobuf:"bytes,13,opt,name=quad_to,json=quadTo,proto3,oneof"`
}

type PathCommand_ArcTo struct {
	ArcTo *PCArc `protobuf:"bytes,14,opt,name=arc_to,json=arcTo,proto3,oneof"`
}

func (*PathCommand_Begin) isPathCommand_Cmd() {}

func (*PathCommand_End) isPathCommand_Cmd() {}

func (*PathCommand_LineTo) isPathCommand_Cmd() {}

func (*PathCommand_CubicTo) isPathCommand_Cmd() {}

func (*PathCommand_QuadTo) isPathCommand_Cmd() {}

func (*PathCommand_ArcTo) isPathCommand_Cmd() {}

type PathNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands    []*PathCommand `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	IsFilled    bool           `protobuf:"varint,2,opt,name=is_filled,json=isFilled,proto3" json:"is_filled,omitempty"`
	Stroke      *Brush         `protobuf:"bytes,3,opt,name=stroke,proto3" json:"stroke,omitempty"`
	StrokeWidth float32        `protobuf:"fixed32,4,opt,name=stroke_width,json=strokeWidth,proto3" json:"stroke_width,omitempty"`
}

func (x *PathNode) Reset() {
	*x = PathNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathNode) ProtoMessage() {}

func (x *PathNode) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathNode.ProtoReflect.Descriptor instead.
func (*PathNode) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{16}
}

func (x *PathNode) GetCommands() []*PathCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *PathNode) GetIsFilled() bool {
	if x != nil {
		return x.IsFilled
	}
	return false
}

func (x *PathNode) GetStroke() *Brush {
	if x != nil {
		return x.Stroke
	}
	return nil
}

func (x *PathNode) GetStrokeWidth() float32 {
	if x != nil {
		return x.StrokeWidth
	}
	return 0
}

type EmptyNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyNode) Reset() {
	*x = EmptyNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyNode) ProtoMessage() {}

func (x *EmptyNode) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyNode.ProtoReflect.Descriptor instead.
func (*EmptyNode) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{17}
}

type ClipRectNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rect *Rectangle `protobuf:"bytes,1,opt,name=rect,proto3" json:"rect,omitempty"`
}

func (x *ClipRectNode) Reset() {
	*x = ClipRectNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClipRectNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClipRectNode) ProtoMessage() {}

func (x *ClipRectNode) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClipRectNode.ProtoReflect.Descriptor instead.
func (*ClipRectNode) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{18}
}

func (x *ClipRectNode) GetRect() *Rectangle {
	if x != nil {
		return x.Rect
	}
	return nil
}

type TransformRotate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle  float32 `protobuf:"fixed32,1,opt,name=angle,proto3" json:"angle,omitempty"`
	Center *Point  `protobuf:"bytes,2,opt,name=center,proto3" json:"center,omitempty"`
}

func (x *TransformRotate) Reset() {
	*x = TransformRotate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformRotate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformRotate) ProtoMessage() {}

func (x *TransformRotate) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformRotate.ProtoReflect.Descriptor instead.
func (*TransformRotate) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{19}
}

func (x *TransformRotate) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *TransformRotate) GetCenter() *Point {
	if x != nil {
		return x.Center
	}
	return nil
}

type TransformScale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Size   *Point `protobuf:"bytes,1,opt,name=size,proto3" json:"size,omitempty"`
	Center *Point `protobuf:"bytes,2,opt,name=center,proto3" json:"center,omitempty"`
}

func (x *TransformScale) Reset() {
	*x = TransformScale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformScale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformScale) ProtoMessage() {}

func (x *TransformScale) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformScale.ProtoReflect.Descriptor instead.
func (*TransformScale) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{20}
}

func (x *TransformScale) GetSize() *Point {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *TransformScale) GetCenter() *Point {
	if x != nil {
		return x.Center
	}
	return nil
}

type TransformTranslate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Translate *Point `protobuf:"bytes,1,opt,name=translate,proto3" json:"translate,omitempty"`
}

func (x *TransformTranslate) Reset() {
	*x = TransformTranslate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformTranslate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformTranslate) ProtoMessage() {}

func (x *TransformTranslate) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformTranslate.ProtoReflect.Descriptor instead.
func (*TransformTranslate) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{21}
}

func (x *TransformTranslate) GetTranslate() *Point {
	if x != nil {
		return x.Translate
	}
	return nil
}

type Transform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Transform:
	//	*Transform_Rotate
	//	*Transform_Scale
	//	*Transform_Translate
	Transform isTransform_Transform `protobuf_oneof:"transform"`
}

func (x *Transform) Reset() {
	*x = Transform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transform) ProtoMessage() {}

func (x *Transform) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transform.ProtoReflect.Descriptor instead.
func (*Transform) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{22}
}

func (m *Transform) GetTransform() isTransform_Transform {
	if m != nil {
		return m.Transform
	}
	return nil
}

func (x *Transform) GetRotate() *TransformRotate {
	if x, ok := x.GetTransform().(*Transform_Rotate); ok {
		return x.Rotate
	}
	return nil
}

func (x *Transform) GetScale() *TransformScale {
	if x, ok := x.GetTransform().(*Transform_Scale); ok {
		return x.Scale
	}
	return nil
}

func (x *Transform) GetTranslate() *TransformTranslate {
	if x, ok := x.GetTransform().(*Transform_Translate); ok {
		return x.Translate
	}
	return nil
}

type isTransform_Transform interface {
	isTransform_Transform()
}

type Transform_Rotate struct {
	Rotate *TransformRotate `protobuf:"bytes,1,opt,name=rotate,proto3,oneof"`
}

type Transform_Scale struct {
	Scale *TransformScale `protobuf:"bytes,2,opt,name=scale,proto3,oneof"`
}

type Transform_Translate struct {
	Translate *TransformTranslate `protobuf:"bytes,3,opt,name=translate,proto3,oneof"`
}

func (*Transform_Rotate) isTransform_Transform() {}

func (*Transform_Scale) isTransform_Transform() {}

func (*Transform_Translate) isTransform_Transform() {}

type TransformNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transform []*Transform `protobuf:"bytes,1,rep,name=transform,proto3" json:"transform,omitempty"`
}

func (x *TransformNode) Reset() {
	*x = TransformNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransformNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransformNode) ProtoMessage() {}

func (x *TransformNode) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransformNode.ProtoReflect.Descriptor instead.
func (*TransformNode) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{23}
}

func (x *TransformNode) GetTransform() []*Transform {
	if x != nil {
		return x.Transform
	}
	return nil
}

type EditCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A timestamp can optionally be specified to benchmark
	// the time it takes to apply a edit end to end.
	// It should be the number of nanoseconds since the epoch.
	Timestamp uint64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The client id unique to the application making requests.
	ClientId string               `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Kind     EditCommand_EditKind `protobuf:"varint,1,opt,name=kind,proto3,enum=uif.EditCommand_EditKind" json:"kind,omitempty"`
	ParentId uint64               `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	ObjectId uint64               `protobuf:"varint,3,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	// Types that are assignable to Node:
	//	*EditCommand_Rect
	//	*EditCommand_Text
	//	*EditCommand_Path
	//	*EditCommand_Empty
	//	*EditCommand_Clip
	//	*EditCommand_Transform
	Node isEditCommand_Node `protobuf_oneof:"node"`
}

func (x *EditCommand) Reset() {
	*x = EditCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditCommand) ProtoMessage() {}

func (x *EditCommand) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditCommand.ProtoReflect.Descriptor instead.
func (*EditCommand) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{24}
}

func (x *EditCommand) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *EditCommand) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *EditCommand) GetKind() EditCommand_EditKind {
	if x != nil {
		return x.Kind
	}
	return EditCommand_APPEND_CHILD
}

func (x *EditCommand) GetParentId() uint64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *EditCommand) GetObjectId() uint64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (m *EditCommand) GetNode() isEditCommand_Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (x *EditCommand) GetRect() *RectangleNode {
	if x, ok := x.GetNode().(*EditCommand_Rect); ok {
		return x.Rect
	}
	return nil
}

func (x *EditCommand) GetText() *TextNode {
	if x, ok := x.GetNode().(*EditCommand_Text); ok {
		return x.Text
	}
	return nil
}

func (x *EditCommand) GetPath() *PathNode {
	if x, ok := x.GetNode().(*EditCommand_Path); ok {
		return x.Path
	}
	return nil
}

func (x *EditCommand) GetEmpty() *EmptyNode {
	if x, ok := x.GetNode().(*EditCommand_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *EditCommand) GetClip() *ClipRectNode {
	if x, ok := x.GetNode().(*EditCommand_Clip); ok {
		return x.Clip
	}
	return nil
}

func (x *EditCommand) GetTransform() *TransformNode {
	if x, ok := x.GetNode().(*EditCommand_Transform); ok {
		return x.Transform
	}
	return nil
}

type isEditCommand_Node interface {
	isEditCommand_Node()
}

type EditCommand_Rect struct {
	Rect *RectangleNode `protobuf:"bytes,10,opt,name=rect,proto3,oneof"`
}

type EditCommand_Text struct {
	Text *TextNode `protobuf:"bytes,11,opt,name=text,proto3,oneof"`
}

type EditCommand_Path struct {
	Path *PathNode `protobuf:"bytes,12,opt,name=path,proto3,oneof"`
}

type EditCommand_Empty struct {
	Empty *EmptyNode `protobuf:"bytes,20,opt,name=empty,proto3,oneof"`
}

type EditCommand_Clip struct {
	Clip *ClipRectNode `protobuf:"bytes,21,opt,name=clip,proto3,oneof"`
}

type EditCommand_Transform struct {
	Transform *TransformNode `protobuf:"bytes,22,opt,name=transform,proto3,oneof"`
}

func (*EditCommand_Rect) isEditCommand_Node() {}

func (*EditCommand_Text) isEditCommand_Node() {}

func (*EditCommand_Path) isEditCommand_Node() {}

func (*EditCommand_Empty) isEditCommand_Node() {}

func (*EditCommand_Clip) isEditCommand_Node() {}

func (*EditCommand_Transform) isEditCommand_Node() {}

type EditReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*EditCommand `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *EditReq) Reset() {
	*x = EditReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditReq) ProtoMessage() {}

func (x *EditReq) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditReq.ProtoReflect.Descriptor instead.
func (*EditReq) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{25}
}

func (x *EditReq) GetCommands() []*EditCommand {
	if x != nil {
		return x.Commands
	}
	return nil
}

type EditResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EditResp) Reset() {
	*x = EditResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditResp) ProtoMessage() {}

func (x *EditResp) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditResp.ProtoReflect.Descriptor instead.
func (*EditResp) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{26}
}

type GetEventsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The client id unique to the application making requests.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GetEventsReq) Reset() {
	*x = GetEventsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEventsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsReq) ProtoMessage() {}

func (x *GetEventsReq) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsReq.ProtoReflect.Descriptor instead.
func (*GetEventsReq) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{27}
}

func (x *GetEventsReq) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type CloseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Closed bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
}

func (x *CloseEvent) Reset() {
	*x = CloseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseEvent) ProtoMessage() {}

func (x *CloseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseEvent.ProtoReflect.Descriptor instead.
func (*CloseEvent) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{28}
}

func (x *CloseEvent) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

type MouseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The point of the mouse event.
	Button   MouseButton `protobuf:"varint,1,opt,name=button,proto3,enum=uif.MouseButton" json:"button,omitempty"`
	State    MouseState  `protobuf:"varint,2,opt,name=state,proto3,enum=uif.MouseState" json:"state,omitempty"`
	Location *Point      `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *MouseEvent) Reset() {
	*x = MouseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MouseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MouseEvent) ProtoMessage() {}

func (x *MouseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MouseEvent.ProtoReflect.Descriptor instead.
func (*MouseEvent) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{29}
}

func (x *MouseEvent) GetButton() MouseButton {
	if x != nil {
		return x.Button
	}
	return MouseButton_MOUSE_BUTTON_NONE
}

func (x *MouseEvent) GetState() MouseState {
	if x != nil {
		return x.State
	}
	return MouseState_MOUSE_STATE_NONE
}

func (x *MouseEvent) GetLocation() *Point {
	if x != nil {
		return x.Location
	}
	return nil
}

type KeyboardEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The key code pressed.
	State   KeyState `protobuf:"varint,1,opt,name=state,proto3,enum=uif.KeyState" json:"state,omitempty"`
	KeyCode uint32   `protobuf:"varint,2,opt,name=key_code,json=keyCode,proto3" json:"key_code,omitempty"`
}

func (x *KeyboardEvent) Reset() {
	*x = KeyboardEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyboardEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyboardEvent) ProtoMessage() {}

func (x *KeyboardEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyboardEvent.ProtoReflect.Descriptor instead.
func (*KeyboardEvent) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{30}
}

func (x *KeyboardEvent) GetState() KeyState {
	if x != nil {
		return x.State
	}
	return KeyState_UNSET
}

func (x *KeyboardEvent) GetKeyCode() uint32 {
	if x != nil {
		return x.KeyCode
	}
	return 0
}

type TextHitEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mouse    *MouseEvent `protobuf:"bytes,1,opt,name=mouse,proto3" json:"mouse,omitempty"`
	Offset   uint32      `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Length   uint32      `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`
	ObjectId uint64      `protobuf:"varint,4,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
}

func (x *TextHitEvent) Reset() {
	*x = TextHitEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextHitEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextHitEvent) ProtoMessage() {}

func (x *TextHitEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextHitEvent.ProtoReflect.Descriptor instead.
func (*TextHitEvent) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{31}
}

func (x *TextHitEvent) GetMouse() *MouseEvent {
	if x != nil {
		return x.Mouse
	}
	return nil
}

func (x *TextHitEvent) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *TextHitEvent) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *TextHitEvent) GetObjectId() uint64 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*Event_Close
	//	*Event_Mouse
	//	*Event_Key
	//	*Event_TextHit
	Event isEvent_Event `protobuf_oneof:"event"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{32}
}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Event) GetClose() *CloseEvent {
	if x, ok := x.GetEvent().(*Event_Close); ok {
		return x.Close
	}
	return nil
}

func (x *Event) GetMouse() *MouseEvent {
	if x, ok := x.GetEvent().(*Event_Mouse); ok {
		return x.Mouse
	}
	return nil
}

func (x *Event) GetKey() *KeyboardEvent {
	if x, ok := x.GetEvent().(*Event_Key); ok {
		return x.Key
	}
	return nil
}

func (x *Event) GetTextHit() *TextHitEvent {
	if x, ok := x.GetEvent().(*Event_TextHit); ok {
		return x.TextHit
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_Close struct {
	Close *CloseEvent `protobuf:"bytes,10,opt,name=close,proto3,oneof"`
}

type Event_Mouse struct {
	Mouse *MouseEvent `protobuf:"bytes,11,opt,name=mouse,proto3,oneof"`
}

type Event_Key struct {
	Key *KeyboardEvent `protobuf:"bytes,12,opt,name=key,proto3,oneof"`
}

type Event_TextHit struct {
	TextHit *TextHitEvent `protobuf:"bytes,13,opt,name=textHit,proto3,oneof"`
}

func (*Event_Close) isEvent_Event() {}

func (*Event_Mouse) isEvent_Event() {}

func (*Event_Key) isEvent_Event() {}

func (*Event_TextHit) isEvent_Event() {}

type GetServerPropertiesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServerPropertiesReq) Reset() {
	*x = GetServerPropertiesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerPropertiesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerPropertiesReq) ProtoMessage() {}

func (x *GetServerPropertiesReq) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerPropertiesReq.ProtoReflect.Descriptor instead.
func (*GetServerPropertiesReq) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{33}
}

type GetServerPropertiesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowWidth  uint32 `protobuf:"varint,1,opt,name=window_width,json=windowWidth,proto3" json:"window_width,omitempty"`
	WindowHeight uint32 `protobuf:"varint,2,opt,name=window_height,json=windowHeight,proto3" json:"window_height,omitempty"`
}

func (x *GetServerPropertiesResp) Reset() {
	*x = GetServerPropertiesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerPropertiesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerPropertiesResp) ProtoMessage() {}

func (x *GetServerPropertiesResp) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerPropertiesResp.ProtoReflect.Descriptor instead.
func (*GetServerPropertiesResp) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{34}
}

func (x *GetServerPropertiesResp) GetWindowWidth() uint32 {
	if x != nil {
		return x.WindowWidth
	}
	return 0
}

func (x *GetServerPropertiesResp) GetWindowHeight() uint32 {
	if x != nil {
		return x.WindowHeight
	}
	return 0
}

type SetClearColorReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color uint32 `protobuf:"varint,1,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *SetClearColorReq) Reset() {
	*x = SetClearColorReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClearColorReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClearColorReq) ProtoMessage() {}

func (x *SetClearColorReq) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClearColorReq.ProtoReflect.Descriptor instead.
func (*SetClearColorReq) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{35}
}

func (x *SetClearColorReq) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type SetClearColorResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetClearColorResp) Reset() {
	*x = SetClearColorResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uif_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetClearColorResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetClearColorResp) ProtoMessage() {}

func (x *SetClearColorResp) ProtoReflect() protoreflect.Message {
	mi := &file_uif_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetClearColorResp.ProtoReflect.Descriptor instead.
func (*SetClearColorResp) Descriptor() ([]byte, []int) {
	return file_uif_proto_rawDescGZIP(), []int{36}
}

var File_uif_proto protoreflect.FileDescriptor

var file_uif_proto_rawDesc = []byte{
	0x0a, 0x09, 0x75, 0x69, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x75, 0x69, 0x66,
	0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x22, 0x55, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x22, 0x0a, 0x0a,
	0x53, 0x6f, 0x6c, 0x69, 0x64, 0x42, 0x72, 0x75, 0x73, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x22, 0x40, 0x0a, 0x0c, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x13, 0x4c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x47, 0x72, 0x61, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x75, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x6f,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x47,
	0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x05, 0x73, 0x74, 0x6f,
	0x70, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x22, 0x6c, 0x0a, 0x05, 0x42, 0x72, 0x75, 0x73, 0x68, 0x12, 0x27, 0x0a, 0x05, 0x73,
	0x6f, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x69, 0x66,
	0x2e, 0x53, 0x6f, 0x6c, 0x69, 0x64, 0x42, 0x72, 0x75, 0x73, 0x68, 0x48, 0x00, 0x52, 0x05, 0x73,
	0x6f, 0x6c, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x61,
	0x72, 0x47, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x72, 0x75, 0x73, 0x68, 0x48, 0x00,
	0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x61, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0xe6, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65,
	0x52, 0x04, 0x72, 0x65, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x42, 0x72, 0x75,
	0x73, 0x68, 0x52, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64,
	0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x5f, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x58, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x5f, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x59, 0x22, 0xe4, 0x02, 0x0a, 0x0c, 0x54, 0x65,
	0x78, 0x74, 0x45, 0x64, 0x69, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x6f,
	0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x08, 0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x66, 0x6f, 0x6e,
	0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x48,
	0x00, 0x52, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x35,
	0x0a, 0x0c, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x53,
	0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x74, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x62, 0x72, 0x75, 0x73, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x42, 0x72, 0x75, 0x73, 0x68, 0x48,
	0x00, 0x52, 0x05, 0x62, 0x72, 0x75, 0x73, 0x68, 0x12, 0x1e, 0x0a, 0x09, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x75,
	0x6e, 0x64, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x65, 0x64, 0x69, 0x74,
	0x22, 0xd9, 0x03, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x75, 0x69, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x06, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x42, 0x72, 0x75, 0x73,
	0x68, 0x52, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x0b, 0x66, 0x6f,
	0x6e, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x52, 0x0a, 0x66, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2d, 0x0a, 0x0a,
	0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x52, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x66,
	0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x46, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x74, 0x63, 0x68, 0x52, 0x0b, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x66, 0x6f, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x66, 0x6f, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2d, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x41, 0x6c, 0x69, 0x67,
	0x6e, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x3c, 0x0a, 0x0f,
	0x70, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x5f, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x61,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x65, 0x64,
	0x69, 0x74, 0x5f, 0x73, 0x70, 0x61, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x64, 0x69, 0x74, 0x53, 0x70, 0x61,
	0x6e, 0x52, 0x09, 0x65, 0x64, 0x69, 0x74, 0x53, 0x70, 0x61, 0x6e, 0x73, 0x22, 0x4b, 0x0a, 0x07,
	0x50, 0x43, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x02, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x70, 0x74, 0x22, 0x2b, 0x0a, 0x05, 0x50, 0x43, 0x45,
	0x6e, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x45, 0x6e, 0x64, 0x4b, 0x69, 0x6e, 0x64,
	0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x26, 0x0a, 0x08, 0x50, 0x43, 0x4c, 0x69, 0x6e, 0x65,
	0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x02, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x70, 0x74, 0x22, 0x7c,
	0x0a, 0x0c, 0x50, 0x43, 0x43, 0x75, 0x62, 0x69, 0x63, 0x43, 0x75, 0x72, 0x76, 0x65, 0x12, 0x26,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x12, 0x26, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x32, 0x12, 0x1c,
	0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69,
	0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x58, 0x0a, 0x10,
	0x50, 0x43, 0x51, 0x75, 0x61, 0x64, 0x72, 0x61, 0x74, 0x69, 0x63, 0x43, 0x75, 0x72, 0x76, 0x65,
	0x12, 0x26, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x31, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x05, 0x50, 0x43, 0x41, 0x72, 0x63,
	0x12, 0x19, 0x0a, 0x08, 0x78, 0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x78, 0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x79,
	0x5f, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x79,
	0x52, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x78, 0x5f, 0x61, 0x78, 0x69, 0x73,
	0x5f, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0d, 0x78, 0x41, 0x78, 0x69, 0x73, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x61, 0x72, 0x63, 0x5f, 0x66, 0x6c, 0x61, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x41, 0x72, 0x63,
	0x46, 0x6c, 0x61, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x77, 0x65, 0x65, 0x70, 0x5f, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x77, 0x65, 0x65, 0x70, 0x46,
	0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x03, 0x65, 0x6e,
	0x64, 0x22, 0x8b, 0x02, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x48, 0x00,
	0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x1e, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x45, 0x6e, 0x64,
	0x48, 0x00, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x74, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50,
	0x43, 0x4c, 0x69, 0x6e, 0x65, 0x54, 0x6f, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x54,
	0x6f, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x75, 0x62, 0x69, 0x63, 0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x43, 0x75, 0x62, 0x69,
	0x63, 0x43, 0x75, 0x72, 0x76, 0x65, 0x48, 0x00, 0x52, 0x07, 0x63, 0x75, 0x62, 0x69, 0x63, 0x54,
	0x6f, 0x12, 0x30, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x51, 0x75, 0x61, 0x64, 0x72,
	0x61, 0x74, 0x69, 0x63, 0x43, 0x75, 0x72, 0x76, 0x65, 0x48, 0x00, 0x52, 0x06, 0x71, 0x75, 0x61,
	0x64, 0x54, 0x6f, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x72, 0x63, 0x5f, 0x74, 0x6f, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x43, 0x41, 0x72, 0x63, 0x48,
	0x00, 0x52, 0x05, 0x61, 0x72, 0x63, 0x54, 0x6f, 0x42, 0x05, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x22,
	0x9c, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x42, 0x72,
	0x75, 0x73, 0x68, 0x52, 0x06, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0x0b,
	0x0a, 0x09, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x0c, 0x43,
	0x6c, 0x69, 0x70, 0x52, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x72,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e,
	0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x65, 0x63, 0x74, 0x22,
	0x4b, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x6f, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x54, 0x0a, 0x0e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x22,
	0x0a, 0x06, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x06, 0x63, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x22, 0x3e, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69,
	0x66, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x2e, 0x0a, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x06, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x53,
	0x63, 0x61, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x6f, 0x72, 0x6d, 0x22, 0x3d, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0x89, 0x04, 0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x75, 0x69,
	0x66, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x52, 0x65, 0x63, 0x74, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x05, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x69, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x63, 0x6c, 0x69, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x52, 0x65, 0x63, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6c, 0x69, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x4e, 0x6f,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0x55, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x50, 0x50, 0x45, 0x4e, 0x44, 0x5f, 0x43, 0x48, 0x49, 0x4c, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a,
	0x0c, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x4c, 0x45, 0x41, 0x4e, 0x55, 0x50, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x4f, 0x42,
	0x4a, 0x45, 0x43, 0x54, 0x10, 0x03, 0x42, 0x06, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x37,
	0x0a, 0x07, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75, 0x69,
	0x66, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x0a, 0x0a, 0x08, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x2b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x24, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x73, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x06, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f,
	0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x75, 0x69, 0x66, 0x2e, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x82, 0x01, 0x0a, 0x0c, 0x54, 0x65, 0x78, 0x74, 0x48, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x22, 0xb9, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x75, 0x69, 0x66, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x4d, 0x6f, 0x75,
	0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x6d, 0x6f, 0x75, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x75, 0x69, 0x66, 0x2e, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74,
	0x48, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x69, 0x66, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x48, 0x69, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07,
	0x74, 0x65, 0x78, 0x74, 0x48, 0x69, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x61, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x28, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x2a, 0x51, 0x0a, 0x09,
	0x46, 0x6f, 0x6e, 0x74, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4f, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x4f,
	0x42, 0x4c, 0x49, 0x51, 0x55, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x4f, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x59, 0x4c, 0x45, 0x5f, 0x49, 0x54, 0x41, 0x4c, 0x49, 0x43, 0x10, 0x02, 0x2a,
	0xc8, 0x02, 0x0a, 0x0a, 0x46, 0x6f, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x19,
	0x0a, 0x15, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x4f, 0x4e,
	0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x54, 0x48, 0x49, 0x4e, 0x10, 0x64, 0x12,
	0x1c, 0x0a, 0x17, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x45,
	0x58, 0x54, 0x52, 0x41, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0xc8, 0x01, 0x12, 0x16, 0x0a,
	0x11, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4c, 0x49, 0x47,
	0x48, 0x54, 0x10, 0xac, 0x02, 0x12, 0x1b, 0x0a, 0x16, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45,
	0x49, 0x47, 0x48, 0x54, 0x5f, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10,
	0xde, 0x02, 0x12, 0x17, 0x0a, 0x12, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48,
	0x54, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x90, 0x03, 0x12, 0x17, 0x0a, 0x12, 0x46,
	0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x55,
	0x4d, 0x10, 0xf4, 0x03, 0x12, 0x1a, 0x0a, 0x15, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x42, 0x4f, 0x4c, 0x44, 0x10, 0xd8, 0x04,
	0x12, 0x15, 0x0a, 0x10, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f,
	0x42, 0x4f, 0x4c, 0x44, 0x10, 0xbc, 0x05, 0x12, 0x1b, 0x0a, 0x16, 0x46, 0x4f, 0x4e, 0x54, 0x5f,
	0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x42, 0x4f, 0x4c,
	0x44, 0x10, 0xa0, 0x06, 0x12, 0x16, 0x0a, 0x11, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49,
	0x47, 0x48, 0x54, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0x84, 0x07, 0x12, 0x1c, 0x0a, 0x17,
	0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x52,
	0x41, 0x5f, 0x42, 0x4c, 0x41, 0x43, 0x4b, 0x10, 0xb6, 0x07, 0x2a, 0xc0, 0x02, 0x0a, 0x0b, 0x46,
	0x6f, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x4f,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4c, 0x54, 0x52, 0x41, 0x5f, 0x43, 0x4f, 0x4e,
	0x44, 0x45, 0x4e, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x46, 0x4f, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x58, 0x54, 0x52, 0x41, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x45, 0x4e, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x4f,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x45,
	0x4e, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x43, 0x4f, 0x4e, 0x44,
	0x45, 0x4e, 0x53, 0x45, 0x44, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x4f, 0x4e, 0x54, 0x5f,
	0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x05,
	0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48,
	0x5f, 0x53, 0x45, 0x4d, 0x49, 0x5f, 0x45, 0x58, 0x50, 0x41, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x06,
	0x12, 0x19, 0x0a, 0x15, 0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48,
	0x5f, 0x45, 0x58, 0x50, 0x41, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x07, 0x12, 0x1f, 0x0a, 0x1b, 0x46,
	0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x45, 0x58, 0x54, 0x52,
	0x41, 0x5f, 0x45, 0x58, 0x50, 0x41, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b,
	0x46, 0x4f, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x52, 0x45, 0x54, 0x43, 0x48, 0x5f, 0x55, 0x4c, 0x54,
	0x52, 0x41, 0x5f, 0x45, 0x58, 0x50, 0x41, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x09, 0x2a, 0x6d, 0x0a,
	0x09, 0x54, 0x65, 0x78, 0x74, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x45,
	0x58, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x5f, 0x4c, 0x45, 0x41, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e,
	0x5f, 0x54, 0x52, 0x41, 0x49, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x54,
	0x45, 0x58, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e,
	0x5f, 0x4a, 0x55, 0x53, 0x54, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x5f, 0x0a, 0x0e,
	0x50, 0x61, 0x72, 0x61, 0x67, 0x72, 0x61, 0x70, 0x68, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x41, 0x52, 0x41, 0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x41, 0x4c, 0x49, 0x47,
	0x4e, 0x5f, 0x4e, 0x45, 0x41, 0x52, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x41, 0x52, 0x41,
	0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x41, 0x4c, 0x49, 0x47, 0x4e, 0x5f, 0x46, 0x41, 0x52, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x52, 0x41, 0x47, 0x52, 0x41, 0x50, 0x48, 0x5f, 0x41,
	0x4c, 0x49, 0x47, 0x4e, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x3f, 0x0a,
	0x0b, 0x50, 0x43, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x17, 0x0a, 0x13,
	0x50, 0x43, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x46, 0x49, 0x4c,
	0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x43, 0x5f, 0x42, 0x45, 0x47, 0x49,
	0x4e, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x48, 0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x2a, 0x37,
	0x0a, 0x09, 0x50, 0x43, 0x45, 0x6e, 0x64, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x13, 0x0a, 0x0f, 0x50,
	0x43, 0x5f, 0x45, 0x4e, 0x44, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x43, 0x5f, 0x45, 0x4e, 0x44, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x43,
	0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0x01, 0x2a, 0x96, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x75, 0x73,
	0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x4f, 0x55, 0x53, 0x45,
	0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x4c,
	0x45, 0x46, 0x54, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x42,
	0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x4d, 0x49, 0x44, 0x44, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x16,
	0x0a, 0x12, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x52,
	0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f,
	0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x58, 0x31, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x4d,
	0x4f, 0x55, 0x53, 0x45, 0x5f, 0x42, 0x55, 0x54, 0x54, 0x4f, 0x4e, 0x5f, 0x58, 0x32, 0x10, 0x05,
	0x2a, 0x4c, 0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x10, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f,
	0x4e, 0x45, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x55, 0x53, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x4f, 0x55, 0x53,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x02, 0x2a, 0x2f,
	0x0a, 0x08, 0x4b, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x50, 0x10, 0x02, 0x32,
	0xf2, 0x01, 0x0a, 0x0b, 0x55, 0x49, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12,
	0x23, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x0c, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x45, 0x64,
	0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x45, 0x64, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x11, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x30, 0x01, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x75, 0x69, 0x66, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x15, 0x2e, 0x75, 0x69, 0x66, 0x2e, 0x53, 0x65, 0x74, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75,
	0x69, 0x66, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x56, 0x62, 0x69, 0x74, 0x7a, 0x2f, 0x75, 0x69, 0x66, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uif_proto_rawDescOnce sync.Once
	file_uif_proto_rawDescData = file_uif_proto_rawDesc
)

func file_uif_proto_rawDescGZIP() []byte {
	file_uif_proto_rawDescOnce.Do(func() {
		file_uif_proto_rawDescData = protoimpl.X.CompressGZIP(file_uif_proto_rawDescData)
	})
	return file_uif_proto_rawDescData
}

var file_uif_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_uif_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_uif_proto_goTypes = []interface{}{
	(FontStyle)(0),                  // 0: uif.FontStyle
	(FontWeight)(0),                 // 1: uif.FontWeight
	(FontStretch)(0),                // 2: uif.FontStretch
	(TextAlign)(0),                  // 3: uif.TextAlign
	(ParagraphAlign)(0),             // 4: uif.ParagraphAlign
	(PCBeginKind)(0),                // 5: uif.PCBeginKind
	(PCEndKind)(0),                  // 6: uif.PCEndKind
	(MouseButton)(0),                // 7: uif.MouseButton
	(MouseState)(0),                 // 8: uif.MouseState
	(KeyState)(0),                   // 9: uif.KeyState
	(EditCommand_EditKind)(0),       // 10: uif.EditCommand.EditKind
	(*Point)(nil),                   // 11: uif.Point
	(*Rectangle)(nil),               // 12: uif.Rectangle
	(*SolidBrush)(nil),              // 13: uif.SolidBrush
	(*GradientStop)(nil),            // 14: uif.GradientStop
	(*LinearGradientBrush)(nil),     // 15: uif.LinearGradientBrush
	(*Brush)(nil),                   // 16: uif.Brush
	(*RectangleNode)(nil),           // 17: uif.RectangleNode
	(*TextEditSpan)(nil),            // 18: uif.TextEditSpan
	(*TextNode)(nil),                // 19: uif.TextNode
	(*PCBegin)(nil),                 // 20: uif.PCBegin
	(*PCEnd)(nil),                   // 21: uif.PCEnd
	(*PCLineTo)(nil),                // 22: uif.PCLineTo
	(*PCCubicCurve)(nil),            // 23: uif.PCCubicCurve
	(*PCQuadraticCurve)(nil),        // 24: uif.PCQuadraticCurve
	(*PCArc)(nil),                   // 25: uif.PCArc
	(*PathCommand)(nil),             // 26: uif.PathCommand
	(*PathNode)(nil),                // 27: uif.PathNode
	(*EmptyNode)(nil),               // 28: uif.EmptyNode
	(*ClipRectNode)(nil),            // 29: uif.ClipRectNode
	(*TransformRotate)(nil),         // 30: uif.TransformRotate
	(*TransformScale)(nil),          // 31: uif.TransformScale
	(*TransformTranslate)(nil),      // 32: uif.TransformTranslate
	(*Transform)(nil),               // 33: uif.Transform
	(*TransformNode)(nil),           // 34: uif.TransformNode
	(*EditCommand)(nil),             // 35: uif.EditCommand
	(*EditReq)(nil),                 // 36: uif.EditReq
	(*EditResp)(nil),                // 37: uif.EditResp
	(*GetEventsReq)(nil),            // 38: uif.GetEventsReq
	(*CloseEvent)(nil),              // 39: uif.CloseEvent
	(*MouseEvent)(nil),              // 40: uif.MouseEvent
	(*KeyboardEvent)(nil),           // 41: uif.KeyboardEvent
	(*TextHitEvent)(nil),            // 42: uif.TextHitEvent
	(*Event)(nil),                   // 43: uif.Event
	(*GetServerPropertiesReq)(nil),  // 44: uif.GetServerPropertiesReq
	(*GetServerPropertiesResp)(nil), // 45: uif.GetServerPropertiesResp
	(*SetClearColorReq)(nil),        // 46: uif.SetClearColorReq
	(*SetClearColorResp)(nil),       // 47: uif.SetClearColorResp
}
var file_uif_proto_depIdxs = []int32{
	14, // 0: uif.LinearGradientBrush.stops:type_name -> uif.GradientStop
	11, // 1: uif.LinearGradientBrush.start:type_name -> uif.Point
	11, // 2: uif.LinearGradientBrush.end:type_name -> uif.Point
	13, // 3: uif.Brush.solid:type_name -> uif.SolidBrush
	15, // 4: uif.Brush.linear:type_name -> uif.LinearGradientBrush
	12, // 5: uif.RectangleNode.rect:type_name -> uif.Rectangle
	16, // 6: uif.RectangleNode.stroke:type_name -> uif.Brush
	1,  // 7: uif.TextEditSpan.font_weight:type_name -> uif.FontWeight
	0,  // 8: uif.TextEditSpan.font_style:type_name -> uif.FontStyle
	2,  // 9: uif.TextEditSpan.font_stretch:type_name -> uif.FontStretch
	16, // 10: uif.TextEditSpan.brush:type_name -> uif.Brush
	12, // 11: uif.TextNode.bounds:type_name -> uif.Rectangle
	16, // 12: uif.TextNode.stroke:type_name -> uif.Brush
	1,  // 13: uif.TextNode.font_weight:type_name -> uif.FontWeight
	0,  // 14: uif.TextNode.font_style:type_name -> uif.FontStyle
	2,  // 15: uif.TextNode.font_stretch:type_name -> uif.FontStretch
	3,  // 16: uif.TextNode.text_align:type_name -> uif.TextAlign
	4,  // 17: uif.TextNode.paragraph_align:type_name -> uif.ParagraphAlign
	18, // 18: uif.TextNode.edit_spans:type_name -> uif.TextEditSpan
	5,  // 19: uif.PCBegin.kind:type_name -> uif.PCBeginKind
	11, // 20: uif.PCBegin.pt:type_name -> uif.Point
	6,  // 21: uif.PCEnd.kind:type_name -> uif.PCEndKind
	11, // 22: uif.PCLineTo.pt:type_name -> uif.Point
	11, // 23: uif.PCCubicCurve.control1:type_name -> uif.Point
	11, // 24: uif.PCCubicCurve.control2:type_name -> uif.Point
	11, // 25: uif.PCCubicCurve.end:type_name -> uif.Point
	11, // 26: uif.PCQuadraticCurve.control1:type_name -> uif.Point
	11, // 27: uif.PCQuadraticCurve.end:type_name -> uif.Point
	11, // 28: uif.PCArc.end:type_name -> uif.Point
	20, // 29: uif.PathCommand.begin:type_name -> uif.PCBegin
	21, // 30: uif.PathCommand.end:type_name -> uif.PCEnd
	22, // 31: uif.PathCommand.line_to:type_name -> uif.PCLineTo
	23, // 32: uif.PathCommand.cubic_to:type_name -> uif.PCCubicCurve
	24, // 33: uif.PathCommand.quad_to:type_name -> uif.PCQuadraticCurve
	25, // 34: uif.PathCommand.arc_to:type_name -> uif.PCArc
	26, // 35: uif.PathNode.commands:type_name -> uif.PathCommand
	16, // 36: uif.PathNode.stroke:type_name -> uif.Brush
	12, // 37: uif.ClipRectNode.rect:type_name -> uif.Rectangle
	11, // 38: uif.TransformRotate.center:type_name -> uif.Point
	11, // 39: uif.TransformScale.size:type_name -> uif.Point
	11, // 40: uif.TransformScale.center:type_name -> uif.Point
	11, // 41: uif.TransformTranslate.translate:type_name -> uif.Point
	30, // 42: uif.Transform.rotate:type_name -> uif.TransformRotate
	31, // 43: uif.Transform.scale:type_name -> uif.TransformScale
	32, // 44: uif.Transform.translate:type_name -> uif.TransformTranslate
	33, // 45: uif.TransformNode.transform:type_name -> uif.Transform
	10, // 46: uif.EditCommand.kind:type_name -> uif.EditCommand.EditKind
	17, // 47: uif.EditCommand.rect:type_name -> uif.RectangleNode
	19, // 48: uif.EditCommand.text:type_name -> uif.TextNode
	27, // 49: uif.EditCommand.path:type_name -> uif.PathNode
	28, // 50: uif.EditCommand.empty:type_name -> uif.EmptyNode
	29, // 51: uif.EditCommand.clip:type_name -> uif.ClipRectNode
	34, // 52: uif.EditCommand.transform:type_name -> uif.TransformNode
	35, // 53: uif.EditReq.commands:type_name -> uif.EditCommand
	7,  // 54: uif.MouseEvent.button:type_name -> uif.MouseButton
	8,  // 55: uif.MouseEvent.state:type_name -> uif.MouseState
	11, // 56: uif.MouseEvent.location:type_name -> uif.Point
	9,  // 57: uif.KeyboardEvent.state:type_name -> uif.KeyState
	40, // 58: uif.TextHitEvent.mouse:type_name -> uif.MouseEvent
	39, // 59: uif.Event.close:type_name -> uif.CloseEvent
	40, // 60: uif.Event.mouse:type_name -> uif.MouseEvent
	41, // 61: uif.Event.key:type_name -> uif.KeyboardEvent
	42, // 62: uif.Event.textHit:type_name -> uif.TextHitEvent
	36, // 63: uif.UIFramework.Edit:input_type -> uif.EditReq
	38, // 64: uif.UIFramework.GetEvents:input_type -> uif.GetEventsReq
	44, // 65: uif.UIFramework.GetServerProperties:input_type -> uif.GetServerPropertiesReq
	46, // 66: uif.UIFramework.SetClearColor:input_type -> uif.SetClearColorReq
	37, // 67: uif.UIFramework.Edit:output_type -> uif.EditResp
	43, // 68: uif.UIFramework.GetEvents:output_type -> uif.Event
	45, // 69: uif.UIFramework.GetServerProperties:output_type -> uif.GetServerPropertiesResp
	47, // 70: uif.UIFramework.SetClearColor:output_type -> uif.SetClearColorResp
	67, // [67:71] is the sub-list for method output_type
	63, // [63:67] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_uif_proto_init() }
func file_uif_proto_init() {
	if File_uif_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uif_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SolidBrush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GradientStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinearGradientBrush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Brush); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RectangleNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextEditSpan); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCBegin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCLineTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCCubicCurve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCQuadraticCurve); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PCArc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClipRectNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformRotate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformScale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformTranslate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransformNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEventsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MouseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyboardEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextHitEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerPropertiesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerPropertiesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClearColorReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uif_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetClearColorResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_uif_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Brush_Solid)(nil),
		(*Brush_Linear)(nil),
	}
	file_uif_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*TextEditSpan_FontName)(nil),
		(*TextEditSpan_FontWeight)(nil),
		(*TextEditSpan_FontStyle)(nil),
		(*TextEditSpan_FontStretch)(nil),
		(*TextEditSpan_FontSize)(nil),
		(*TextEditSpan_Brush)(nil),
		(*TextEditSpan_Underline)(nil),
	}
	file_uif_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*PathCommand_Begin)(nil),
		(*PathCommand_End)(nil),
		(*PathCommand_LineTo)(nil),
		(*PathCommand_CubicTo)(nil),
		(*PathCommand_QuadTo)(nil),
		(*PathCommand_ArcTo)(nil),
	}
	file_uif_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*Transform_Rotate)(nil),
		(*Transform_Scale)(nil),
		(*Transform_Translate)(nil),
	}
	file_uif_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*EditCommand_Rect)(nil),
		(*EditCommand_Text)(nil),
		(*EditCommand_Path)(nil),
		(*EditCommand_Empty)(nil),
		(*EditCommand_Clip)(nil),
		(*EditCommand_Transform)(nil),
	}
	file_uif_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*Event_Close)(nil),
		(*Event_Mouse)(nil),
		(*Event_Key)(nil),
		(*Event_TextHit)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uif_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uif_proto_goTypes,
		DependencyIndexes: file_uif_proto_depIdxs,
		EnumInfos:         file_uif_proto_enumTypes,
		MessageInfos:      file_uif_proto_msgTypes,
	}.Build()
	File_uif_proto = out.File
	file_uif_proto_rawDesc = nil
	file_uif_proto_goTypes = nil
	file_uif_proto_depIdxs = nil
}
